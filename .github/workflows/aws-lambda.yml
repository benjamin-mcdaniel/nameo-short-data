name: Deploy to AWS Lambda

on:
  push:
    branches:
      - main # change this to your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install -r requirements.txt

    - name: Create lambda_code.zip
      run: |
          zip lambda_code.zip helloworld.py


    - name: Deploy to AWS Lambda
      env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
        FUNCTION_NAME="helloworld02"
        aws lambda get-function --function-name $FUNCTION_NAME --region ${{ secrets.AWS_REGION }} >/dev/null 2>&1
        if [ $? -eq 0 ]; then
            echo "Function $FUNCTION_NAME already exists. Updating..."
            aws lambda update-function-code --function-name $FUNCTION_NAME \
            --zip-file fileb://lambda_code.zip \
            --region ${{ secrets.AWS_REGION }}
        else
            echo "Creating new function $FUNCTION_NAME"
            aws lambda create-function --function-name $FUNCTION_NAME \
            --runtime python3.8 \
            --zip-file fileb://lambda_code.zip \
            --handler lambda_function.lambda_handler \
            --role arn:aws:iam::847105105358:role/mcdaniel_lambda \
            --region ${{ secrets.AWS_REGION }}
        fi


    - name: Deploy to API Gateway
      env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
      run: |
          API_NAME="helloworld02"
          REST_API_ID=$(aws apigateway get-rest-apis --query "items[?name=='$API_NAME'].id" --output text --region ${{ secrets.AWS_REGION }})
          
          if [ -z "$REST_API_ID" ]; then
            echo "Creating new API $API_NAME"
            REST_API_ID=$(aws apigateway create-rest-api --name $API_NAME --endpoint-configuration types=REGIONAL --query 'id' --output text)
            
            # Add the /hello method to the API
            aws apigateway put-method --rest-api-id $REST_API_ID --resource-id 'root' --http-method 'GET' --authorization-type 'NONE' --region ${{ secrets.AWS_REGION }}
            aws apigateway put-integration --rest-api-id $REST_API_ID --resource-id 'root' --http-method 'GET' --type 'AWS' --integration-http-method 'POST' --uri "arn:aws:apigateway:${{ secrets.AWS_REGION }}:lambda:path/2015-03-31/functions/arn:aws:lambda:${{ secrets.AWS_REGION }}:123456789012:function:helloworld02/invocations" --region ${{ secrets.AWS_REGION }}
            aws apigateway put-method-response --rest-api-id $REST_API_ID --resource-id 'root'