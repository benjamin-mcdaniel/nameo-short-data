name: Deploy Nameo Short Data

on:
  push:
    branches:
      - main # change this to your default branch

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create main.py
        run: |
          zip main.zip main.py

      - name: Deploy to AWS Lambda
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          FUNCTION_NAME="nameoshortdata"
          aws lambda get-function --function-name $FUNCTION_NAME --region $AWS_REGION >/dev/null 2>&1
          if [ $? -eq 0 ]; then
              echo "Function $FUNCTION_NAME already exists. Updating..."
              aws lambda update-function-code --function-name $FUNCTION_NAME \
                --zip-file fileb://lambda_code.zip \
                --region $AWS_REGION
          else
              echo "Creating new function $FUNCTION_NAME"
              aws lambda create-function --function-name $FUNCTION_NAME \
                --runtime python3.8 \
                --zip-file fileb://lambda_code.zip \
                --handler lambda_function.lambda_handler \
                --role arn:aws:iam::847105105358:role/mcdaniel_lambda \
                --region $AWS_REGION
          fi

          - name: Create or Update API Gateway
          uses: aws-actions/aws-cli@v2
          with:
            args: |
              apigateway get-rest-apis --query "items[?name=='nameoshortdata'].id" --output text --region ${{ secrets.AWS_REGION }}
          id: api_check
  
      - name: Create or Update API Gateway
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          API_NAME="nameoshortdata"
          aws apigateway get-rest-apis --query "items[?name=='$API_NAME'].id" --output text --region $AWS_REGION
            if [ $? -eq 0 ]; then
                echo "API $API_NAME already exists. Updating..."
                aws apigateway update-rest-api --rest-api-id $API_ID --patch-operations op=replace,path=/name,value=$API_NAME --region $AWS_REGION
            else
                echo "Creating new API $API_NAME"
                aws apigateway create-rest-api --name $API_NAME --endpoint-configuration types=REGIONAL --region $AWS_REGION
            fi










            