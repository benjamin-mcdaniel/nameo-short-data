- name: Deploy Lambda Function and API Gateway
  hosts: localhost
  gather_facts: false

  tasks:

    - name: Install AWS CLI
      become: yes
      pip:
        name: awscli

    - name: Configure AWS CLI
      become: yes
      shell: |
        aws configure set aws_access_key_id "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
        aws configure set aws_secret_access_key "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
        aws configure set default.region "{{ lookup('env', 'AWS_REGION') }}"

    - name: Create API Gateway
      become: yes
      community.aws.api_gateway:
        name: "nameoshortdata"
        protocol_type: HTTP
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"
      register: api_gateway

    - name: Get API Gateway ID
      set_fact:
        api_gateway_id: "{{ api_gateway.api.id }}"

    - name: Create API Gateway deployment
      become: yes
      community.aws.api_gateway:
        name: "{{ lookup('env', 'API_GATEWAY_STAGE') }}"
        api_id: "{{ api_gateway_id }}"
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"

    - name: Create API Gateway resource
      become: yes
      community.aws.apigatewayv2_resource:
        api_id: "{{ api_gateway_id }}"
        parent_id: "{{ api_gateway.api.default_route_id }}"
        path_part: "my-resource"
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"
      register: api_resource

    - name: Get API Gateway resource ID
      set_fact:
        api_resource_id: "{{ api_resource.resource_id }}"

    - name: Create API Gateway method
      become: yes
      community.aws.apigatewayv2_integration:
        api_id: "{{ api_gateway_id }}"
        route_id: "{{ api_resource_id }}"
        integration_type: AWS_PROXY
        integration_method: POST
        integration_uri: "arn:aws:apigateway:{{ lookup('env', 'AWS_REGION') }}:lambda:path/2015-03-31/functions/{{ lambda_arn }}/invocations"
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"
        http_method: GET

    - name: Create API Gateway method response
      become: yes
      community.aws.apigatewayv2_integration_response:
        api_id: "{{ api_gateway_id }}"
        route_id: "{{ api_resource_id }}"
        integration_id: "{{ api_resource.integration_id }}"
        http_method: GET
        status_code: 200
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"

    - name: Create API Gateway integration response
      become: yes
      community.aws.apigatewayv2_integration_response:
        api_id: "{{ api_gateway_id }}"
        route_id: "{{ api_resource_id }}"
        integration_id: "{{ api_resource.integration_id }}"
        http_method: GET
        status_code: 200
        response_templates:
          application/json: ""
        state: present
        region: "{{ lookup('env', 'AWS_REGION') }}"

    - name: Get API Gateway URL
      become: yes
      community.aws.api_gateway:
        api_id: "{{ api_gateway_id }}"
        region: "{{ lookup('env', 'AWS_REGION') }}"
      register: api_stage

    - name: Print API Gateway URL
      debug:
        var: api_stage.stages[0].invoke_url
